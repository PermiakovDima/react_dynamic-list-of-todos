{"version":3,"sources":["components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","Api/api.ts","App.tsx","index.tsx"],"names":["TodoList","state","className","this","props","todos","map","todo","classNames","completed","htmlFor","type","checked","readOnly","title","selectedUserId","userId","onClick","selectUser","id","React","Component","CurrentUser","user","name","email","phone","clear","API_URL","getUser","fetch","then","response","json","App","filterBy","filterTitle","clearUser","setState","handlerChange","event","target","value","filterTodos","filter","toLocaleLowerCase","includes","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a8b7e58.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (id: number) => void,\n  selectedUserId: number,\n};\n\nexport class TodoList extends React.Component<Props, {}> {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {this.props.todos.map(todo => (\n              <li\n                className={\n                  classNames('TodoList__item', {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  })\n                }\n                key={todo.id}\n              >\n                <label htmlFor=\"todoStatus\">\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className={\n                    classNames('TodoList__user-button',\n                      'button', {\n                        'TodoList__user-button--selected': this.props.selectedUserId === todo.userId,\n                      })\n                  }\n                  type=\"button\"\n                  onClick={() => this.props.selectUser(todo.userId)}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\ntype Props = {\n  user: User,\n  clear: () => void,\n};\n\nexport class CurrentUser extends React.Component<Props, {}> {\n  state = {};\n\n  render() {\n    const {\n      name,\n      email,\n      phone,\n      id,\n    } = this.props.user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {' '}\n            {id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          className=\"CurrentUser__clear\"\n          type=\"button\"\n          onClick={this.props.clear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","const API_URL = 'https://mate.academy/students-api';\n\nexport function getAllTodos(): Promise<Todo[]> {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUser(userId: number): Promise<User> {\n  return fetch(`${API_URL}/users/${userId}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos, getUser } from './Api/api';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[],\n  user: User | null,\n  filterBy: string,\n  filterTitle: string,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n    user: null,\n    filterBy: 'all',\n    filterTitle: '',\n  };\n\n  componentDidMount() {\n    getAllTodos()\n      .then(todos => {\n        this.setState({\n          todos,\n        });\n      });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n      user: null,\n    });\n  };\n\n  selectUser = (id: number) => {\n    if (id !== this.state.selectedUserId) {\n      getUser(id)\n        .then(user => {\n          this.setState({\n            user,\n            selectedUserId: id,\n          });\n        });\n    }\n  };\n\n  handlerChange = (event: { target: { name: string; value: string; }; }) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => (\n      {\n        ...state,\n        [name]: value,\n      }\n    ));\n  };\n\n  filterTodos = () => {\n    let filterTodos = [...this.state.todos];\n\n    if (this.state.filterBy === 'completed') {\n      filterTodos = filterTodos.filter(todo => todo.completed === true);\n    }\n\n    if (this.state.filterBy === 'active') {\n      filterTodos = filterTodos.filter(todo => todo.completed === false);\n    }\n\n    return filterTodos.filter(todo => {\n      return todo.title.toLocaleLowerCase().includes(this.state.filterTitle.toLocaleLowerCase());\n    });\n  };\n\n  render() {\n    const { selectedUserId, user } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <div className=\"App__filter\">\n            <input\n              type=\"text\"\n              name=\"filterTitle\"\n              className=\"App__input\"\n              onChange={this.handlerChange}\n            />\n            <select\n              name=\"filterBy\"\n              id=\"\"\n              className=\"App__input\"\n              onChange={this.handlerChange}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"completed\">Completed</option>\n              <option value=\"active\">Active</option>\n            </select>\n          </div>\n          <TodoList\n            todos={this.filterTodos()}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId && user ? (\n              <CurrentUser\n                user={user}\n                clear={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}